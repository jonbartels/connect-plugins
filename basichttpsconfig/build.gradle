/*
 * Copyright Tony Germano
 * 
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. 
 */
 
plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    // Mirth libraries
    compileOnly files('lib/mirth-server.jar', 'lib/donkey-server.jar', 'lib/http-server.jar', 'lib/http-shared.jar')
    testImplementation files('lib/mirth-server.jar', 'lib/donkey-server.jar', 'lib/http-server.jar', 'lib/http-shared.jar')

    // Mirth provided libraries
    [
        'javax.servlet:javax.servlet-api:3.1.0',
        'org.apache.httpcomponents:httpclient:4.5.1',
        'org.eclipse.jetty:jetty-server:9.4.9.v20180320',
        'commons-configuration:commons-configuration:1.7'
    ].each { lib -> 
        compileOnly lib
        testImplementation lib
    }
}

jar {
    archiveClassifier = 'server'
    destinationDirectory = file("$buildDir/staging/$rootProject.name")
}

task jarSign {
    // Dummy task for now. Server plugins don't need to be signed.
    dependsOn assemble
}

task stageFiles(type: Copy) {
    from configurations.runtimeClasspath
    from 'src/plugin.xml'
    into "$buildDir/staging/$rootProject.name"
}

task zipExtension(type: Zip) {
    destinationDirectory = file("$buildDir/dist")
    from("$buildDir/staging") {
        include "**/*"
    }
    dependsOn jarSign, stageFiles
}

build {
    dependsOn zipExtension
}

